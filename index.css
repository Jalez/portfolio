@tailwind base;
@tailwind components;
@tailwind utilities;

/* Basic CSS reset and utilities */
* {
  box-sizing: border-box;
}

html {
  overflow: hidden;
}

body {
  margin: 0;
  font-family: 'Inter', sans-serif;
  overflow: hidden;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Theme-aware styles */
[data-theme="dark"] {
  --bg-primary: #000000;
  --bg-secondary: #1a1a1a;
  --text-primary: #ffffff;
  --text-secondary: #cccccc;
  --border-color: #333333;
}

[data-theme="light"] {
  --bg-primary: #ffffff;
  --bg-secondary: #f8f9fa;
  --text-primary: #1a1a1a;
  --text-secondary: #4a5568;
  --border-color: #e5e5e5;
}

/* Scrollbar hiding utility */
.scrollbar-hide {
  -ms-overflow-style: none;  /* Internet Explorer 10+ */
  scrollbar-width: none;  /* Firefox */
}
.scrollbar-hide::-webkit-scrollbar {
  display: none;  /* Safari and Chrome */
}

/* Animation classes that match the ones used in components */
.animate-fade-in-up {
  animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  60% {
    opacity: 0.8;
    transform: translateY(-2px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Loading spinner */
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Theme-aware utility classes */
.bg-theme-primary {
  background-color: var(--bg-primary);
}

.bg-theme-secondary {
  background-color: var(--bg-secondary);
}

.bg-theme-background {
  background-color: var(--bg-primary);
}

.text-theme-primary {
  color: var(--text-primary);
}

.text-theme-secondary {
  color: var(--text-secondary);
}

.border-theme {
  border-color: var(--border-color);
}

/* Updated utility classes for backward compatibility */
.text-primary {
  color: var(--text-primary);
}

.bg-background {
  background-color: var(--bg-primary);
}

.bg-card {
  background-color: var(--bg-secondary);
}

.text-main {
  color: var(--text-primary);
}

.text-secondary {
  color: var(--text-secondary);
}

/* Processing animation keyframes */
@keyframes processingRotate {
  0% {
    --angle: 0deg;
  }
  100% {
    --angle: 360deg;
  }
}

@keyframes hoverGlow {
  0% {
    --angle: 0deg;
  }
  100% {
    --angle: 360deg;
  }
}

/* Support for CSS custom properties in gradients */
@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

/* Hover animation class */
.hover-border-animation:hover {
  --hover-animation: hoverGlow 2s linear infinite;
}